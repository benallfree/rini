
export default "(() => {\n  // node_modules/nanoevents/index.js\n  var createNanoEvents = () => ({\n    events: {},\n    emit(event, ...args) {\n      ;\n      (this.events[event] || []).forEach((i) => i(...args));\n    },\n    on(event, cb) {\n      ;\n      (this.events[event] = this.events[event] || []).push(cb);\n      return () => this.events[event] = (this.events[event] || []).filter((i) => i !== cb);\n    }\n  });\n\n  // src/callem/index.ts\n  function callem() {\n    const emitter = createNanoEvents();\n    return [\n      (callback) => {\n        const unsub = emitter.on(\"callem\", callback);\n        return unsub;\n      },\n      (data) => {\n        emitter.emit(\"callem\", data);\n      }\n    ];\n  }\n\n  // src/rn-webworker/bootstrap.ts\n  var [onMessage, emitMessage] = callem();\n  window.onerror = function(message, url, lineNumber) {\n    const msg = {\n      type: \"error\",\n      data: {message, url, lineNumber}\n    };\n    window.ReactNativeWebView.postMessage(JSON.stringify(msg));\n    return true;\n  };\n  window.addEventListener(\"unhandledrejection\", (event) => {\n    const msg = {\n      type: \"error\",\n      data: event.reason\n    };\n    window.ReactNativeWebView.postMessage(JSON.stringify(msg));\n  });\n  var _send = (msg) => {\n    const payload = JSON.stringify(msg);\n    window.ReactNativeWebView.postMessage(payload);\n    return payload;\n  };\n  window.send = (msg) => {\n    const payload = _send(msg);\n  };\n  window.ready = () => {\n    const msg = {\n      type: \"ready\"\n    };\n    return window.send(msg);\n  };\n  window.log = (...args) => {\n    const msg = {\n      type: \"log\",\n      data: args\n    };\n    return _send(msg);\n  };\n  window.emitMessage = emitMessage;\n  window.onMessage = onMessage;\n  window.ReactNativeWebView.postMessage(\"ready\");\n})();\n";

