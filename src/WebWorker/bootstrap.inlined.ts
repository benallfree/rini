export default '(() => {\n  var __create = Object.create;\n  var __defProp = Object.defineProperty;\n  var __getProtoOf = Object.getPrototypeOf;\n  var __hasOwnProp = Object.prototype.hasOwnProperty;\n  var __getOwnPropNames = Object.getOwnPropertyNames;\n  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;\n  var __markAsModule = (target) => __defProp(target, "__esModule", {value: true});\n  var __commonJS = (callback, module) => () => {\n    if (!module) {\n      module = {exports: {}};\n      callback(module.exports, module);\n    }\n    return module.exports;\n  };\n  var __exportStar = (target, module, desc) => {\n    if (module && typeof module === "object" || typeof module === "function") {\n      for (let key of __getOwnPropNames(module))\n        if (!__hasOwnProp.call(target, key) && key !== "default")\n          __defProp(target, key, {get: () => module[key], enumerable: !(desc = __getOwnPropDesc(module, key)) || desc.enumerable});\n    }\n    return target;\n  };\n  var __toModule = (module) => {\n    if (module && module.__esModule)\n      return module;\n    return __exportStar(__markAsModule(__defProp(module != null ? __create(__getProtoOf(module)) : {}, "default", {value: module, enumerable: true})), module);\n  };\n\n  // node_modules/nanoevents/index.cjs\n  var require_nanoevents = __commonJS((exports, module) => {\n    var createNanoEvents = () => ({\n      events: {},\n      emit(event, ...args) {\n        ;\n        (this.events[event] || []).forEach((i) => i(...args));\n      },\n      on(event, cb) {\n        ;\n        (this.events[event] = this.events[event] || []).push(cb);\n        return () => this.events[event] = (this.events[event] || []).filter((i) => i !== cb);\n      }\n    });\n    module.exports = {createNanoEvents};\n  });\n\n  // node_modules/callem/dist/index.js\n  var require_dist = __commonJS((exports) => {\n    "use strict";\n    exports.__esModule = true;\n    exports.callem = void 0;\n    var nanoevents_1 = require_nanoevents();\n    function callem2() {\n      var emitter = nanoevents_1.createNanoEvents();\n      return [\n        function(callback) {\n          var unsub = emitter.on("callem", callback);\n          return unsub;\n        },\n        function(data) {\n          emitter.emit("callem", data);\n        }\n      ];\n    }\n    exports.callem = callem2;\n  });\n\n  // src/WebWorker/bootstrap.ts\n  var import_callem = __toModule(require_dist());\n\n  // src/WebWorker/types.ts\n  var MessageTypes;\n  (function(MessageTypes2) {\n    MessageTypes2["Log"] = "log";\n    MessageTypes2["Ping"] = "ping";\n    MessageTypes2["Pong"] = "pong";\n    MessageTypes2["Error"] = "error";\n    MessageTypes2["Ready"] = "ready";\n  })(MessageTypes || (MessageTypes = {}));\n\n  // src/WebWorker/bootstrap.ts\n  var [onMessage, emitMessage] = import_callem.callem();\n  window.onerror = function(message, url, lineNumber) {\n    const msg = {\n      type: MessageTypes.Error,\n      data: {message, url, lineNumber}\n    };\n    window.ReactNativeWebView.postMessage(JSON.stringify(msg));\n    return true;\n  };\n  window.addEventListener("unhandledrejection", (event) => {\n    const msg = {\n      type: MessageTypes.Error,\n      data: event.reason\n    };\n    window.ReactNativeWebView.postMessage(JSON.stringify(msg));\n  });\n  var _send = (msg) => {\n    const payload = JSON.stringify(msg);\n    window.ReactNativeWebView.postMessage(payload);\n    return payload;\n  };\n  window.send = (msg) => {\n    const payload = _send(msg);\n  };\n  window.ready = () => {\n    const msg = {\n      type: "ready"\n    };\n    return window.send(msg);\n  };\n  window.log = (...args) => {\n    const msg = {\n      type: "log",\n      data: args\n    };\n    return _send(msg);\n  };\n  window.emitMessage = emitMessage;\n  window.onMessage = onMessage;\n  window.ReactNativeWebView.postMessage("ready");\n})();\n'
